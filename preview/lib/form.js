// deno-lint-ignore-file
// deno-fmt-ignore-file
// @ts-nocheck
// @ts-self-types="./form.d.ts"
class FormError{constructor(formId){this.element=getElementById(formId+"/error",HTMLElement),this.contents=getElementById(formId+"/error/content",HTMLElement)}clearError(){this.element.classList.add("collapse"),this.element.ariaHidden="true",this.contents.textContent=""}addError(error){""===this.contents.textContent?this.setError("Invalid form: "+error):this.contents.textContent+=", "+error}setError(error){this.element.classList.remove("collapse"),this.element.ariaHidden="false",this.contents.textContent=error}}class Input{constructor(formId,inputId){this.input=getElementById(""+formId+inputId+"/input",HTMLInputElement),this.error=getElementById(""+formId+inputId+"/error",HTMLElement),this.input.addEventListener("input",()=>{this.input.setCustomValidity("")})}getValue(){return this.input.value}lock(){this.input.disabled=!0}unlock(){this.input.disabled=!1}clearError(){this.input.setCustomValidity(""),this.error.classList.add("hidden"),this.error.ariaHidden="true",this.error.textContent="!"}addError(error){"!"===this.error.textContent?this.setError("Invalid value: "+error):(this.error.textContent+=", "+error,this.input.setCustomValidity(this.error.textContent??"Invalid value"))}setError(error){this.input.setCustomValidity(error),this.error.classList.remove("hidden"),this.error.ariaHidden="false",this.error.textContent=error}}class Form{constructor(formId,inputIds){this.form=getElementById(formId,HTMLFormElement),this.formError=new FormError(formId),this.submitButton=getElementById(formId+"/submit",HTMLButtonElement);var r,t=new Map;for(r of inputIds)t.set(r,new Input(formId,r));this.inputs=t}clearErrors(){this.formError.clearError();for(var r of this.inputs.values())r.clearError()}lock(){this.submitButton.disabled=!0;for(var r of this.inputs.values())r.lock()}unlock(){this.submitButton.disabled=!1;for(var r of this.inputs.values())r.unlock()}setInputErrors(problems){if(problems&&0!==problems.length)for(var t of problems){let r=null;(r=t.pointer?this.inputs.get(t.pointer)??null:r)&&t.detail?r.addError(t.detail):r&&!t.detail?r.addError("unknown reason"):!r&&t.detail?this.formError.addError(t.detail):this.formError.addError("an unknown field is invalid")}else this.formError.addError("an unknown field is invalid")}getValues(){var r,t,e=new Map;for([r,t]of this.inputs)e.set(r,t.getValue());return e}}
/**
 * # Panics
 * If element does not exist or is not an instance of the expected type.
 */function getElementById(id,expected){var r=document.getElementById(id);if(r&&r instanceof expected)return r;throw`element '${id}' does not exist`}export{FormError,Input,Form};