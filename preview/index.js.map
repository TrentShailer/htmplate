{
  "version": 3,
  "sources": ["file:///C:/Users/trent/Files/Projects/htmplate/preview/lib/redirect.ts", "file:///C:/Users/trent/Files/Projects/htmplate/preview/lib/form.ts", "file:///C:/Users/trent/Files/Projects/htmplate/preview/index.ts"],
  "sourcesContent": ["export async function setHref(target: string): Promise<never> {\r\n  location.href = target;\r\n  return await block();\r\n}\r\n\r\nfunction block(): Promise<never> {\r\n  // deno-lint-ignore no-explicit-any\r\n  const poll = (resolve: any) => {\r\n    setTimeout(() => poll(resolve), 400);\r\n  };\r\n\r\n  return new Promise(poll);\r\n}\r\n", "import { Problem } from \"./fetch.ts\";\r\n\r\nexport class FormError {\r\n  element: HTMLElement;\r\n  contents: HTMLElement;\r\n\r\n  constructor(formId: string) {\r\n    this.element = getElementById<HTMLElement>(`${formId}/error`, HTMLElement);\r\n    this.contents = getElementById<HTMLElement>(`${formId}/error/content`, HTMLElement);\r\n  }\r\n\r\n  clearError() {\r\n    this.element.classList.add(\"collapse\");\r\n    this.element.ariaHidden = \"true\";\r\n    this.contents.textContent = \"\";\r\n  }\r\n\r\n  addError(error: string) {\r\n    if (this.contents.textContent === \"\") {\r\n      this.setError(`Invalid form: ${error}`);\r\n      return;\r\n    }\r\n\r\n    this.contents.textContent += `, ${error}`;\r\n  }\r\n\r\n  setError(error: string) {\r\n    this.element.classList.remove(\"collapse\");\r\n    this.element.ariaHidden = \"false\";\r\n    this.contents.textContent = error;\r\n  }\r\n\r\n  unexpectedResponse(action: string) {\r\n    this.setError(`Could not ${action} because the server sent an unexpected response.`);\r\n  }\r\n}\r\n\r\nexport class Input {\r\n  input: HTMLInputElement;\r\n  error: HTMLElement;\r\n\r\n  constructor(formId: string, inputId: string) {\r\n    this.input = getElementById<HTMLInputElement>(`${formId}${inputId}/input`, HTMLInputElement);\r\n    this.error = getElementById<HTMLElement>(`${formId}${inputId}/error`, HTMLElement);\r\n\r\n    this.input.addEventListener(\"input\", () => {\r\n      this.input.setCustomValidity(\"\");\r\n    });\r\n  }\r\n\r\n  getValue(): string {\r\n    if (this.input.type === \"checkbox\") {\r\n      if (this.input.checked) {\r\n        return \"checked\";\r\n      } else {\r\n        return \"unchecked\";\r\n      }\r\n    } else {\r\n      return this.input.value;\r\n    }\r\n  }\r\n\r\n  lock() {\r\n    this.input.disabled = true;\r\n  }\r\n\r\n  unlock() {\r\n    this.input.disabled = false;\r\n  }\r\n\r\n  clearError() {\r\n    this.input.setCustomValidity(\"\");\r\n    this.error.classList.add(\"hidden\");\r\n    this.error.ariaHidden = \"true\";\r\n    this.error.textContent = \"!\";\r\n  }\r\n\r\n  addError(error: string) {\r\n    if (this.error.textContent === \"!\") {\r\n      this.setError(`Invalid value: ${error}`);\r\n      return;\r\n    }\r\n    this.error.textContent += `, ${error}`;\r\n    this.input.setCustomValidity(this.error.textContent ?? \"Invalid value\");\r\n  }\r\n\r\n  setError(error: string) {\r\n    this.input.setCustomValidity(error);\r\n    this.error.classList.remove(\"hidden\");\r\n    this.error.ariaHidden = \"false\";\r\n    this.error.textContent = error;\r\n  }\r\n}\r\n\r\nexport class Form {\r\n  form: HTMLFormElement;\r\n  formError: FormError;\r\n  submitButton: HTMLButtonElement;\r\n  inputs: Map<string, Input>;\r\n\r\n  constructor(formId: string, inputIds: string[]) {\r\n    this.form = getElementById<HTMLFormElement>(formId, HTMLFormElement);\r\n    this.formError = new FormError(formId);\r\n    this.submitButton = getElementById<HTMLButtonElement>(`${formId}/submit`, HTMLButtonElement);\r\n\r\n    const inputs = new Map<string, Input>();\r\n    for (const inputId of inputIds) {\r\n      inputs.set(inputId, new Input(formId, inputId));\r\n    }\r\n    this.inputs = inputs;\r\n  }\r\n\r\n  clearErrors() {\r\n    this.formError.clearError();\r\n    for (const input of this.inputs.values()) {\r\n      input.clearError();\r\n    }\r\n  }\r\n\r\n  lock() {\r\n    this.submitButton.disabled = true;\r\n    for (const input of this.inputs.values()) {\r\n      input.lock();\r\n    }\r\n  }\r\n\r\n  unlock() {\r\n    this.submitButton.disabled = false;\r\n    for (const input of this.inputs.values()) {\r\n      input.unlock();\r\n    }\r\n  }\r\n\r\n  setInputErrors(problems: Problem[] | null) {\r\n    if (!problems || problems.length === 0) {\r\n      this.formError.addError(\"an unknown field is invalid\");\r\n      return;\r\n    }\r\n\r\n    for (const problem of problems) {\r\n      let input: Input | null = null;\r\n      if (problem.pointer) {\r\n        input = this.inputs.get(problem.pointer) ?? null;\r\n      }\r\n\r\n      if (input && problem.detail) {\r\n        input.addError(problem.detail);\r\n      } else if (input && !problem.detail) {\r\n        input.addError(\"unknown reason\");\r\n      } else if (!input && problem.detail) {\r\n        this.formError.addError(problem.detail);\r\n      } else {\r\n        this.formError.addError(\"an unknown field is invalid\");\r\n      }\r\n    }\r\n  }\r\n\r\n  getValues(): Map<string, string> {\r\n    const map = new Map();\r\n    for (const [id, input] of this.inputs) {\r\n      map.set(id, input.getValue());\r\n    }\r\n    return map;\r\n  }\r\n}\r\n\r\n// deno-lint-ignore no-explicit-any\r\ntype Class<T> = new (...args: any[]) => T;\r\n\r\n/**\r\n * # Panics\r\n * If element does not exist or is not an instance of the expected type.\r\n */\r\nfunction getElementById<T extends HTMLElement>(id: string, expected: Class<T>): T {\r\n  const element = document.getElementById(id);\r\n  if (!element || !(element instanceof expected)) {\r\n    throw `element '${id}' does not exist`;\r\n  }\r\n  return element;\r\n}\r\n", "import { setHref } from \"./lib/redirect.ts\";\r\nimport { Form } from \"./lib/form.ts\";\r\n\r\nconst register = new Form(\"/register\", [\"/username\", \"/displayName\"]);\r\n\r\nregister.form.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n\r\n  register.lock();\r\n  register.clearErrors();\r\n  const values = register.getValues();\r\n\r\n  const username = values.get(\"/username\") ?? \"\";\r\n  const displayName = values.get(\"/displayName\") ?? \"\";\r\n  console.log(username);\r\n  console.log(displayName);\r\n\r\n  setTimeout(function () {\r\n    const problems = [\r\n      { pointer: \"/username\", detail: \"too long\" },\r\n      { pointer: \"/displayName\", detail: \"too short\" },\r\n      { pointer: \"/displayName\", detail: \"contains illegal character\" },\r\n      { pointer: \"/authorization\", detail: \"unauthorized\" },\r\n      { pointer: null, detail: \"internal server error\" },\r\n      { pointer: \"/username\", detail: null },\r\n      { pointer: null, detail: null },\r\n      { pointer: null, detail: null },\r\n    ];\r\n\r\n    register.setInputErrors(problems);\r\n    register.unlock();\r\n  }, 1000);\r\n});\r\n\r\nconst redirect = document.getElementById(\"redirect\");\r\nif (redirect) {\r\n  redirect.addEventListener(\"click\", async () => {\r\n    await setHref(\"/source\");\r\n    console.log(\"Shouldn't execute\");\r\n  });\r\n}\r\n"],
  "mappings": "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",
  "names": ["setHref", "target", "block", "poll", "resolve", "FormError", "formId", "getElementById", "error", "action", "Input", "inputId", "Form", "inputIds", "inputs", "input", "problems", "problem", "map", "id", "expected", "element", "register", "Form", "event", "values", "username", "displayName", "problems", "redirect", "setHref"]
}
